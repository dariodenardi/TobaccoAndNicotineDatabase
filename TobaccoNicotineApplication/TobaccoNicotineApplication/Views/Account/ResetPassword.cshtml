@using EUCookies;

@model TobaccoNicotineApplication.Models.ResetPasswordViewModel

@{
    ViewBag.Title = "Reset password";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.Title - Tobacco&Nicotine Database</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />

    <link href='//fonts.googleapis.com/css?family=PT+Sans+Caption:400,700|Roboto:500|Crete+Round:400i' rel='stylesheet' type='text/css' />
    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/cookies")
</head>
<body>
    <div class="accountbg"></div>
    <div class="wrapper-page">
        <div class="panel panel-color panel-primary panel-pages">

            <div class="panel-body">
                <h3 class="text-center m-t-0 m-b-15">
                    <a href="/Account/Login" class="logo logo-admin"><span>Tobacco</span>Database</a>

                    <img src="~/Images/Logos/Nomisma.png" height="101" width="204">
                </h3>
                <br>
                <h4 class="text-muted text-center m-t-0"><b>Insert new Password</b></h4>

                <form class="form-horizontal" method="post" action="/Account/ResetPassword">

                    <div class="alert alert-info alert-dismissible">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                        Enter your new <b>Password</b>!
                    </div>

                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Code)
                    @Html.HiddenFor(model => model.Id, new { Value = Request["userId"] })

                    <div class="form-group">
                        <div class="col-xs-12">
                            <input type="password" id="pass2" class="form-control" name="Password"
                                   placeholder="Password"
                                   data-parsley-minlength="8"
                                   data-parsley-maxlength="24"
                                   data-parsley-required-message="Please enter your password."
                                   data-parsley-uppercase="1"
                                   data-parsley-lowercase="1"
                                   data-parsley-number="1"
                                   data-parsley-special="1"
                                   data-parsley-required />
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-xs-12">
                            <input type="password" class="form-control" name="ConfirmPassword"
                                   placeholder="Re-Type Password"
                                   data-parsley-equalto="#pass2"
                                   data-parsley-required-message="Please re-enter your password."
                                   data-parsley-required />
                        </div>
                    </div>

                    <div class="form-group text-center m-t-40">
                        <div class="col-xs-12">
                            <button class="btn btn-primary btn-block btn-lg waves-effect waves-light" type="submit">Reimposta</button>
                        </div>
                    </div>

                </form>
            </div>

        </div>
    </div>
    @Html.Raw(Consent.Instance.Install())

    @Scripts.Render("~/Scripts/jquery")
    @Scripts.Render("~/Scripts/bootstrap")
    @Scripts.Render("~/Scripts/modernizr")
    @Scripts.Render("~/Scripts/detect")
    @Scripts.Render("~/Scripts/fastclick")
    @Scripts.Render("~/Scripts/jqueryslim")
    @Scripts.Render("~/Scripts/jqueryblock")
    @Scripts.Render("~/Scripts/waves")
    @Scripts.Render("~/Scripts/wow")
    @Scripts.Render("~/Scripts/jquerynice")
    @Scripts.Render("~/Scripts/jqueryscroll")
    @Scripts.Render("~/Scripts/app")
    <!-- cookies message -->
    @Scripts.Render("~/Scripts/cookies")

    <!-- parsley -->
    @Scripts.Render("~/Scripts/parsley")

    <script>
        //has uppercase
        window.Parsley.addValidator('uppercase', {
            requirementType: 'number',
            validateString: function (value, requirement) {
                var uppercases = value.match(/[A-Z]/g) || [];
                return uppercases.length >= requirement;
            },
            messages: {
                en: 'Your password must contain at least (%s) uppercase letter.'
            }
        });

        //has lowercase
        window.Parsley.addValidator('lowercase', {
            requirementType: 'number',
            validateString: function (value, requirement) {
                var lowecases = value.match(/[a-z]/g) || [];
                return lowecases.length >= requirement;
            },
            messages: {
                en: 'Your password must contain at least (%s) lowercase letter.'
            }
        });

        //has number
        window.Parsley.addValidator('number', {
            requirementType: 'number',
            validateString: function (value, requirement) {
                var numbers = value.match(/[0-9]/g) || [];
                return numbers.length >= requirement;
            },
            messages: {
                en: 'Your password must contain at least (%s) number.'
            }
        });

        $(document).ready(function () {
            $('form').parsley();
        });
    </script>
</body>
</html>
