@using TobaccoNicotineApplication.Utilities
@using System.ComponentModel.DataAnnotations

@model TobaccoNicotineApplication.Models.Country

@{
    ViewBag.Title = "Index";
    ViewBag.PageTitle = "Countries";
    ViewBag.TitlePrincipal = "List of Countries";

    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "20",
        Value = "20"
    });
    listItems.Add(new SelectListItem
    {
        Text = "30",
        Value = "30",
    });
    listItems.Add(new SelectListItem
    {
        Text = "40",
        Value = "40"
    });
}

@{
    string pmiCoding = StaticName.PmiCoding();
    string continentCode = StaticName.ContinentCode();
    string regionCode = StaticName.RegionCode();
    string continentName = StaticName.ContinentName();
    string regionName = StaticName.RegionName();
    string countryCode = StaticName.CountryCode();
    string countryName = StaticName.CountryName();
    string areaCode = StaticName.AreaCode();

    StringLengthAttribute countryNameLenAttr = typeof(TobaccoNicotineApplication.Models.Country).GetProperty("CountryName").GetCustomAttributes(typeof(StringLengthAttribute), false).Cast<StringLengthAttribute>().SingleOrDefault();
    StringLengthAttribute pmiCodingLenAttr = typeof(TobaccoNicotineApplication.Models.Country).GetProperty("PmiCoding").GetCustomAttributes(typeof(StringLengthAttribute), false).Cast<StringLengthAttribute>().SingleOrDefault();
    StringLengthAttribute continentNameLenAttr = typeof(TobaccoNicotineApplication.Models.Country).GetProperty("ContinentName").GetCustomAttributes(typeof(StringLengthAttribute), false).Cast<StringLengthAttribute>().SingleOrDefault();
    StringLengthAttribute regionNameLenAttr = typeof(TobaccoNicotineApplication.Models.Country).GetProperty("RegionName").GetCustomAttributes(typeof(StringLengthAttribute), false).Cast<StringLengthAttribute>().SingleOrDefault();
}

@section styles {
    <!-- Plugin -->
    @Styles.Render("~/Content/colorpicker")

    <!-- Sweet Alert -->
    @Styles.Render("~/Content/sweetalert")

    <!-- Chosen -->
    <link rel="stylesheet" href="//cdn.jsdelivr.net/chosen/1.1.0/chosen.css">
}

<div class="panel-group panel-group-joined" id="accordion-country">
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a id="collapseTitleOne" data-toggle="collapse" data-parent="#accordion-country" href="#collapseOne">
                    Filter
                </a>
            </h4>
        </div>
        <div id="collapseOne" class="panel-collapse collapse in">
            <div class="panel-body">
                <!--Filter-->
                <dl class="dl-horizontal">
                    <dt>
                        @Html.Label(pmiCoding, new { @class = "control-label col-md-2" })
                    </dt>

                    <dd>
                        <select id="pmiCodingString" onchange="loadFilter()" class="form-control chosen-select" multiple="multiple"></select>
                    </dd>

                    <dt>
                        @Html.Label(continentName, new { @class = "control-label col-md-2" })
                    </dt>

                    <dd>
                        <select id="continentNameString" onchange="loadFilter()" class="form-control chosen-select" multiple="multiple"></select>
                    </dd>

                    <dt>
                        @Html.Label(regionName, new { @class = "control-label col-md-2" })
                    </dt>

                    <dd>
                        <select id="regionNameString" onchange="loadFilter()" class="form-control chosen-select" multiple="multiple"></select>
                    </dd>

                    <dt>
                        @Html.Label(countryName, new { @class = "control-label col-md-2" })
                    </dt>

                    <dd>
                        <select id="countryNameString" onchange="loadFilter()" class="form-control chosen-select" multiple="multiple"></select>
                    </dd>

                    <dt>
                        @Html.Label(continentCode, new { @class = "control-label col-md-2" })
                    </dt>

                    <dd>
                        <select id="continentCodeString" onchange="loadFilter()" class="form-control chosen-select" multiple="multiple"></select>
                    </dd>

                    <dt>
                        @Html.Label(regionCode, new { @class = "control-label col-md-2" })
                    </dt>

                    <dd>
                        <select id="regionCodeString" onchange="loadFilter()" class="form-control chosen-select" multiple="multiple"></select>
                    </dd>

                    <dt>
                        @Html.Label(countryCode, new { @class = "control-label col-md-2" })
                    </dt>

                    <dd>
                        <select id="countryCodeString" onchange="loadFilter()" class="form-control chosen-select" multiple="multiple"></select>
                    </dd>

                    <dt>
                        @Html.Label(areaCode, new { @class = "control-label col-md-2" })
                    </dt>

                    <dd>
                        <select id="areaCodeString" onchange="loadFilter()" class="form-control chosen-select" multiple="multiple"></select>
                    </dd>
                </dl>

                <button type="submit" class="btn btn-primary waves-effect" onclick='FilterCountry()'>Filter</button>
                <!--Filter-->
            </div>
        </div>
    </div>
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a id="collapseTitleTwo" data-toggle="collapse" data-parent="#accordion-country" href="#collapseTwo" class="collapsed">
                    Rows
                </a>
            </h4>
        </div>
        <div id="collapseTwo" class="panel-collapse collapse">
            <div class="panel-body">
                <!--Table-->
                <button type="button" class="btn btn-default" onclick="toggle2()">Select/Deselect All</button>
                <button type="button" class="btn btn-default" onclick="Copy()">Copy to Clipboard</button>
                @if (User.IsInRole("Admin") || User.IsInRole("Writer"))
                {
                    <button type="button" class="btn btn-default" onclick="Paste()">Paste from Clipboard</button>
                }
                <br />
                <div class="col-lg-12">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th width="5%"></th>
                                    <th width="17%">@countryName <img id="idSortable1" src="~/Images/Sortable/bg.png" alt="bg" onclick="SortableName()" style="width:auto;"></th>
                                    <th width="17%">@regionName <img id="idSortable2" src="~/Images/Sortable/bg.png" alt="bg" onclick="SortableRegionName()" style="width:auto;"></th>
                                    <th width="17%">@continentName <img id="idSortable3" src="~/Images/Sortable/bg.png" alt="bg" onclick="SortableContinentName()" style="width:auto;"></th>
                                    <th width="17%">@pmiCoding <img id="idSortable4" src="~/Images/Sortable/bg.png" alt="bg" onclick="SortablePmi()" style="width:auto;"></th>
                                    <th width="17%">@areaCode <img id="idSortable5" src="~/Images/Sortable/bg.png" alt="bg" onclick="SortableAreaCode()" style="width:auto;"></th>
                                    <th width="10%"></th>
                                </tr>
                            </thead>
                            <tbody id="SetCountryList"></tbody>
                            <tr id="LoadingStatus"></tr>
                        </table>
                    </div>

                    <div style="display: inline-grid">
                        @Html.Label("Show entries", new { @class = "control-label" })
                        @Html.DropDownList("showEntry", listItems, new { @class = "form-control", @onchange = "FilterCountry(0)" })
                    </div>
                    @if (User.IsInRole("Admin") || User.IsInRole("Writer"))
                    {
                        <br />
                        <br />
                        <button type="button" class="btn btn-success" onclick="AddNewCountry()">Add New Country</button>
                    }
                    @if (User.IsInRole("Admin"))
                    {
                        <button type="button" class="btn btn-danger" onclick="deleteRows()">Delete Country/s</button>
                    }
                    <br />
                    <br />
                    <div class="col-md-12 text-center">
                        <!--<ul class="pagination pagination-lg pager" id="myPager"></ul>-->
                        <ul class="pagination m-b-5" id="myPager"></ul>
                    </div>
                </div>
                <!--Table-->
            </div>
        </div>
    </div>
</div>

@*Create A Popup Modal For Add*@

<div class="modal fade" id="MyModal">
    <div class="modal-dialog" style="width:55%">
        <div class="modal-content">

            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 id="ModalTitle"></h4>
            </div>

            <div class="modal-body">
                <!-- Start panel -->
                <div class="col-lg">
                    <div class="panel panel-default panel-success">
                        <div class="panel-heading">
                            <h4 class="panel-title" id="PanelTitleAddEditDetails"></h4>
                        </div>
                        <div class="panel-body">
                            <!-- Start form -->
                            <form id="form">
                                <fieldset id="SubmitForm">
                                    <dl class="dl-horizontal">

                                        <dt>
                                            @Html.Label(countryCode, new { @class = "control-label col-md-2" })
                                        </dt>

                                        <dd>
                                            @Html.EditorFor(model => model.CountryCode, new { htmlAttributes = new { @id = "CountryCode", @class = "form-control", @placeholder = "Insert " + countryCode + "*" } })
                                            @Html.ValidationMessageFor(model => model.CountryCode, "", new { @class = "text-danger" })
                                        </dd>

                                        <dt>
                                            @Html.Label(continentCode, new { @class = "control-label col-md-2" })
                                        </dt>

                                        <dd>
                                            @Html.TextBoxFor(m => m.ContinentCode, new { @id = "ContinentCode", @class = "form-control", @placeholder = "Insert " + continentCode + "*" })
                                            @Html.ValidationMessageFor(model => model.ContinentCode, "", new { @class = "text-danger" })
                                        </dd>

                                        <dt>
                                            @Html.Label(regionCode, new { @class = "control-label col-md-2" })
                                        </dt>

                                        <dd>
                                            @Html.TextBoxFor(m => m.RegionCode, new { @id = "RegionCode", @class = "form-control", @placeholder = "Insert " + regionCode + "*" })
                                            @Html.ValidationMessageFor(model => model.RegionCode, "", new { @class = "text-danger" })
                                        </dd>

                                        <dt>
                                            @Html.Label(continentName, new { @class = "control-label col-md-2" })
                                        </dt>

                                        <dd>
                                            @Html.EditorFor(model => model.ContinentName, new { htmlAttributes = new { @id = "ContinentName", @class = "form-control", @maxlength = continentNameLenAttr.MaximumLength, @placeholder = "Insert " + continentName + "*" } })
                                            @Html.ValidationMessageFor(model => model.ContinentName, "", new { @class = "text-danger" })
                                        </dd>

                                        <dt>
                                            @Html.Label(regionName, new { @class = "control-label col-md-2" })
                                        </dt>

                                        <dd>
                                            @Html.EditorFor(model => model.RegionName, new { htmlAttributes = new { @id = "RegionName", @class = "form-control", @maxlength = regionNameLenAttr.MaximumLength, @placeholder = "Insert " + regionName + "*" } })
                                            @Html.ValidationMessageFor(model => model.RegionName, "", new { @class = "text-danger" })
                                        </dd>

                                        <dt>
                                            @Html.Label(pmiCoding, new { @class = "control-label col-md-2" })
                                        </dt>

                                        <dd>
                                            @Html.EditorFor(model => model.PmiCoding, new { htmlAttributes = new { @id = "PmiCoding", @class = "form-control", @maxlength = pmiCodingLenAttr.MaximumLength, @placeholder = "Insert " + pmiCoding + "*" } })
                                            @Html.ValidationMessageFor(model => model.PmiCoding, "", new { @class = "text-danger" })
                                        </dd>

                                        <dt>
                                            @Html.Label(countryName, new { @class = "control-label col-md-2" })
                                        </dt>

                                        <dd>
                                            @Html.EditorFor(model => model.CountryName, new { htmlAttributes = new { @id = "CountryName", @class = "form-control", @maxlength = countryNameLenAttr.MaximumLength, @placeholder = "Insert " + countryName + "*" } })
                                            @Html.ValidationMessageFor(model => model.CountryName, "", new { @class = "text-danger" })
                                        </dd>

                                        <dt>
                                            @Html.Label(areaCode, new { @class = "control-label col-md-2" })
                                        </dt>

                                        <dd>
                                            @Html.EditorFor(model => model.AreaCode, new { htmlAttributes = new { @id = "AreaCode", @class = "form-control", @placeholder = "Insert " + areaCode + "*" } })
                                            @Html.ValidationMessageFor(model => model.AreaCode, "", new { @class = "text-danger" })
                                        </dd>
                                    </dl>

                                </fieldset>
                            </form>
                            <!-- End form -->
                        </div>
                    </div>
                </div>
                <!-- End panel -->
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" id="r">Cancel</button>
                <button type="button" class="btn btn-success" id="CreateCountry">Save</button>
            </div>

        </div>
    </div>
</div>

@*Create A PopUp Modal For DeleteConfirmation*@

<div class="modal fade" id="DeleteConfirmation">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4>There is an operation to be performed...</h4>
            </div>

            <div class="modal-body">
                <!-- Start panel -->
                <div class="col-lg-12">
                    <div class="panel panel-fill panel-danger">
                        <div class="panel-heading">
                            <h4 class="panel-title" id="PanelTitleDelete"></h4>
                        </div>
                        <div class="panel-body">
                            Are you sure you want to delete this Record/s?
                        </div>
                    </div>
                </div>
                <!-- End panel -->
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" id="r">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="ConfirmDelete()">Confirm</button>
            </div>

        </div>
    </div>
</div>

@section scripts {
    <!-- Pagination  -->
    @Scripts.Render("~/Scripts/pagination")

    <!-- Chosen  -->
    <script src="//cdn.jsdelivr.net/chosen/1.1.0/chosen.jquery.js"></script>

    <!-- Plugins js -->
    @Scripts.Render("~/Scripts/colorpicker")
    @Scripts.Render("~/Scripts/maxlength")

    <!-- Sweet-Alert  -->
    @Scripts.Render("~/Scripts/sweetalert")

    <script>
        var boolAdmin = '@User.IsInRole("Admin")' == "True";
        var boolWriter = '@User.IsInRole("Writer")' == "True";
        var boolReader = '@User.IsInRole("Reader")' == "True";

        var countryNameMin = '@countryNameLenAttr.MinimumLength';
        var countryNameMax = '@countryNameLenAttr.MaximumLength';
        var regionNameMin = '@regionNameLenAttr.MinimumLength';
        var regionNameMax = '@regionNameLenAttr.MaximumLength';
        var continentNameMin = '@continentNameLenAttr.MinimumLength';
        var continentNameMax = '@continentNameLenAttr.MaximumLength';
        var pmiCodingMin = '@pmiCodingLenAttr.MinimumLength';
        var pmiCodingMax = '@pmiCodingLenAttr.MaximumLength';

        var pmiCoding = '@pmiCoding';
        var continentName = '@continentName';
        var regionName = '@regionName';
        var countryName = '@countryName';
    </script>

    @Scripts.Render("~/Scripts/country")
}